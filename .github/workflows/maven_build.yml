# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17 for x64
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: x64
        cache: maven
    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots verify
    - name: Create directory for staging to be included later as a gh release binary package
      run: mkdir staging && cp target/*.jar staging
    - name: Upload the packaged binaries to Github
      uses: actions/upload-artifact@v4
      with:
        name: openai-connector
        path: staging

  docker:

    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Build with Maven
        run: mvn --batch-mode --update-snapshots verify
#        run: mvn verify

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5

      - name: Login to Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          # Server address of docker registry
#          registry: No need for dockerhub
          username: ${{secrets.DOCKER_USERNAME}}
          # Password or personal registry api access token
          password: ${{secrets.DOCKER_API_TOKEN}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
          tags: ${{secrets.DOCKER_USERNAME}}/openai-connector-java:latest
          labels: ${{ steps.meta.outputs.labels }}
